/* Given an array arr of size n containing non-negative integers, the task is to divide it into two sets S1 and S2 such that the absolute difference 
between their sums is minimum and find the minimum difference
Example 1:
Input: N = 4, arr[] = {1, 6, 11, 5} 
Output: 1
Explanation: 
Subset1 = {1, 5, 6}, sum of Subset1 = 12 
Subset2 = {11}, sum of Subset2 = 11   
Example 2:
Input: N = 2, arr[] = {1, 4}
Output: 3
Explanation: 
Subset1 = {1}, sum of Subset1 = 1
Subset2 = {4}, sum of Subset2 = 4   */

//C+++ Code below-
#include <bits/stdc++.h>
using namespace std;
class Solution{

  public:
	int minDifference(int arr[], int n)  { 
	    // Your code goes here
	    int totalSum = 0;
	    for(int i=0; i<n; i++){
	        totalSum += arr[i];
	    }
	    int k =totalSum;
	    vector<vector<bool>> dp(n, vector<bool>(k+1, 0));
	    for(int i=0; i<n; i++){
	        dp[i][0] = true;
	    }
	    if(arr[0] <= k){
	        dp[0][arr[0]] = true;
	    }
	    for(int i=1; i<n; i++){
	        for(int target=1; target<=k; target++){
	            bool notTake = dp[i-1][target];
	            bool take = false;
	            if(arr[i] <= target){
	                take = dp[i-1][target-arr[i]];
	            }
	            dp[i][target] = take | notTake;
	        }
	    }
	    int ans = INT_MAX;
	    for(int s1=0; s1<=totalSum/2; s1++){
	        if(dp[n-1][s1] == true){
	            ans = min(ans, abs((totalSum-s1)-s1));
	        }
	    }
	    return ans;
	} 
};
int main() 
{
   	int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;

        int a[n];
        for(int i = 0; i < n; i++)
        	cin >> a[i];

       

	    Solution ob;
	    cout << ob.minDifference(a, n) << "\n";
	     
    }
    return 0;
}
