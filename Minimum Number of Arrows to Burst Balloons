//Leetcode -- 452 -- Medium
//C++ Code 
class Solution {
public:
    static bool comp(vector<int>&a, vector<int>&b)
    {
        return a[1] < b[1];
    }
    int findMinArrowShots(vector<vector<int>>& points) {
        sort(points.begin(), points.end(), comp);
        int ans = 1;
        int r = points[0][1];
        for(int i=1; i<points.size(); i++)
        {
            if(points[i][0] > r)
            {
                ans++;
                r = points[i][1];
            }
        }
        return ans;
    }
};

//java code
class Solution {
    public int findMinArrowShots(int[][] points) {
        Arrays.sort(points, (a, b)-> Integer.compare(a[1], b[1]));
        int ans = 1;
        int r = points[0][1];
        for(int i=1; i<points.length; i++)
        {
            if(points[i][0] > r)
            {
                ans++;
                r = points[i][1];
            }
        }
        return ans;
    }
}
