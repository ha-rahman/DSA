//GFG--Medium
//C++ Code Below
#include <bits/stdc++.h>
using namespace std;
class Solution {
  public:
    vector<int> asteroidCollision(int N, vector<int> &asteroids) {
        // code here
        stack<int> s;
        for(int x : asteroids)
        {
            if(x > 0) s.push(x);
            else
            {
                while(!s.empty() && s.top()>0 && s.top()<abs(x)) s.pop();
                if(s.empty() || s.top()<0) s.push(x);
                else if(x+s.top() == 0) s.pop();
            }
        }
        vector<int> ans(s.size());
        for(int i=s.size()-1; i>=0; i--)
        {
            ans[i] = s.top();
            s.pop();
        }
        return ans;
    }
};
int main() {
    int t;
    cin >> t;
    while (t--) {
        int N;
        cin >> N;

        vector<int> asteroids(N);
        for (int i = 0; i < N; i++) cin >> asteroids[i];

        Solution obj;
        vector<int> ans = obj.asteroidCollision(N, asteroids);
        for (auto &it : ans) cout << it << ' ';
        cout << endl;
    }
    return 0;
}
