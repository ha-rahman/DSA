//Leetcode -- 232 -- Easy
//C++ Code Below-
class MyQueue {
public:
    stack<int>s1;
    stack<int>s2;
    MyQueue() {
        
    }
    void push(int x) {
        while(s1.empty()==false){
            s2.push(s1.top());
            s1.pop();
        }
        s2.push(x);
        while(s2.empty()==false){
            s1.push(s2.top());
            s2.pop();
        }
    }
    int pop() {
        int a = s1.top();
        s1.pop();
        return a;
    }
    int peek() {
        return s1.top();
    }
    bool empty() {
        return s1.empty();
    }
};

// Java Code Below--
class MyQueue {

    Stack<Integer> s1 = new Stack<>();
    Stack<Integer> s2 = new Stack<>();
    public MyQueue() {
        
    }
    public void push(int x) {
        while(!s1.isEmpty()){
            s2.push(s1.pop());
        }
        s2.push(x);
        while(!s2.isEmpty()){
            s1.push(s2.pop());
        }
    }
    public int pop() {
        return s1.pop();
    }
    public int peek() {
        return s1.peek();
    }
    public boolean empty() {
        return s1.isEmpty();
    }
}
