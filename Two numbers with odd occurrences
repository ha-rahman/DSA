/* Given an unsorted array, Arr[] of size N and that contains even number of occurrences for all numbers except two numbers.
Find the two numbers in decreasing order which has odd occurrences.
Example 1:
Input:
N = 8
Arr = {4, 2, 4, 5, 2, 3, 3, 1}
Output: {5, 1} 
Explaination: 5 and 1 have odd occurrences.
Example 2:
Input:
N = 6
Arr = {1 7 5 7 5 4 7 4}
Output: {7, 1}
Explaination: 7 and 1 have odd occurrences.  */

//C++ Code below--
#include <bits/stdc++.h>
using namespace std;
class Solution{
    public:
    vector<long long int> twoOddNum(long long int Arr[], long long int N)  
    {
        // code here
        long long int xr = 0;
        for(int i=0; i<N; i++){
            xr ^= Arr[i];
        }
        long long int p = 0;
        while(((1<<p)&xr)==0){
            p++;
        }
        long long int one = 0, two = 0;
        for(int i=0; i<N; i++){
            if((1<<p)&Arr[i]){
                one ^= Arr[i];
            }
            else{
                two ^= Arr[i];
            }
        }
        if(two>one){
            swap(one, two);
        }
        return {one, two};
    }
};
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        long long int N;
        cin>>N;
        long long int Arr[N];
        for(long int i = 0;i < N;i++)
        cin>>Arr[i];
        Solution ob;
        vector<long long int>ans=ob.twoOddNum(Arr,N);
        for(long long int i=0;i<ans.size();i++)cout<<ans[i]<<" ";
        cout<<endl;
    }
    return 0;
}
