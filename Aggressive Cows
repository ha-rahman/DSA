// GFG -- Medium
//C++ Code Below--
#include <bits/stdc++.h>
using namespace std;
class Solution {
public:

    int solve(int n, int k, vector<int> &a) {
    
        // Write your code here
        sort(a.begin(), a.end());
        int l = 1, r = a[n-1]- a[0];
        int ans = 0;
        while(l <= r){
            int mid = (l+r)/2;
            if(possible(n, k, a, mid)){
                ans = mid;
                l = mid+1;
            }
            else{
                r = mid-1;
            }
        }
        return ans;
    }
    bool possible(int n, int k, vector<int>&a, int dis){
        int st = a[0], cnt = 1;
        for(int i=1; i<n; i++){
            if(a[i] - st >= dis){
                cnt++;
                st = a[i];
            }
            if(cnt == k) return true;
        }
        return false;
    }
};
int main() {
    int t = 1;
    cin >> t;

    // freopen ("output_gfg.txt", "w", stdout);

    while (t--) {
        // Input

        int n, k;
        cin >> n >> k;

        vector<int> stalls(n);
        for (int i = 0; i < n; i++) {
            cin >> stalls[i];
        }
        // char ch;
        // cin >> ch;

        Solution obj;
        cout << obj.solve(n, k, stalls) << endl;

        // cout << "~\n";
    }
    // fclose(stdout);

    return 0;
}
