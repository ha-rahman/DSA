/* Given a row wise sorted matrix of size R*C where R and C are always odd, find the median of the matrix.
Example 1:
Input:
R = 3, C = 3
M = [[1, 3, 5], 
     [2, 6, 9], 
     [3, 6, 9]]
Output: 5
Explanation: Sorting matrix elements gives 
us {1,2,3,3,5,6,6,9,9}. Hence, 5 is median. 8/
//Solution
// This the easiest method but it gives TLE
class Solution{   
public:
    int median(vector<vector<int>> &matrix, int R, int C){
        // code here          
        vector<int> ans;
        for(int i=0; i<R; i++){
            for(int j=0; j<C; j++){
                ans.push_back(matrix[i][j]);
            }
        }
        sort(ans.begin(), ans.end());
        return ans[(R*C)/2];
    }
};

// This is the optimize code for this question
class Solution{   
public:
    int median(vector<vector<int>> &matrix, int R, int C){
        // code here          
        int low = 1;
        int high = 1e9;
        while(low <= high){
            int mid = (low+high) >> 1;
            int cnt = 0;
            for(int i=0; i<R; i++){
                cnt += countSmallerThanEqualToMid(matrix[i], mid);
            }
            if(cnt <= (R*C)/2){
                low = mid + 1;
            }
            else{
                high = mid - 1;
            }
        }
        return low;
    }
    int countSmallerThanEqualToMid(vector<int> &row, int mid){
        int l=0, h=row.size()-1;
        while(l <= h){
            int md = (l+h) >> 1;
            if(row[md] <= mid){
                l = md+1;
            }
            else{
                h = md-1;
            }
        }
        return l;
    }
};
