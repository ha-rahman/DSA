// Leetcode -- 1207 -- Medium
/* Given an array of integers arr, return true if the number of occurrences of each value in the array is unique, or false otherwise.
Example 1:
Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.
Example 2:
Input: arr = [1,2]
Output: false
Example 3:
Input: arr = [-3,0,1,-3,1,1,1,-3,10,0]
Output: true   */

//C++ Code Below--
class Solution {
public:
    bool uniqueOccurrences(vector<int>& arr) {
        unordered_map<int, int> mp;
        for(int a : arr){
            mp[a]++;
        }
        set<int> s;
        for(auto x : mp){
            s.insert(x.second);
        }
        return s.size() == mp.size();
    }
};

//Java Code Below--
class Solution {
    public boolean uniqueOccurrences(int[] arr) {
        Map<Integer, Integer> mp = new HashMap<>();
        for(int x : arr){
            mp.put(x, mp.getOrDefault(x, 0)+1);
        }
        Set<Integer> s = new HashSet<>(mp.values());
        return mp.size() == s.size();
    }
}
