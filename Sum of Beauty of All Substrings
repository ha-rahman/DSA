/* Given a string S, return the sum of beauty of all its substrings.
The beauty of a string is defined as the difference in frequencies between the most frequent and least frequent characters.
For example, the beauty of string "aaac" is 3 - 1 = 2.
Example 1:
Input:
S = "aaac"
Output:
3
Explanation: The substrings with non - zero beauty are ["aaac","aac"] where beauty of "aaac" is 2 and beauty of "aac" is 1.
Example 2:
Input:
S = "geeksforgeeks"
Output:
62
Explanation: There are 91 substrings of the given strings. Like, the beauty of substring "geek" is 1. In this way the sum of beauties of all substrings are 62.
Your Task:
You don't need to read input or print anything. Your task is to complete the function beautySum() which takes string S as input paramters and returns the sum of beauty of all its substrings. */

//C++ Code below--
//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function Template for C++

class Solution {
  public:
    int beautySum(string s) {
        // Your code goes here
        int ans = 0;
        for(int i=0; i<s.size(); i++){
            vector<int> freq(26, 0);
            for(int j=i; j<s.size(); j++){
                freq[s[j]-'a']++;
                int max_f = 0, min_f = INT_MAX;
                for(auto x:freq){
                    max_f = max(max_f, x);
                    if(x>=1) min_f = min(min_f, x);
                }
                ans += (max_f - min_f);
            }
        }
        return ans;
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        string s;
        cin >> s;
        Solution obj;
        cout << obj.beautySum(s) << endl;
    }
    return 0;
}
// } Driver Code Ends
