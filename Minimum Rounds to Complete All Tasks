//LeetCode -- 2244 -- Medium

//C++ Code 
class Solution {
public:
    int minimumRounds(vector<int>& tasks) {
        map<int, int> mp;
        for(int x : tasks) mp[x]++;
        int ans = 0;
        for(auto [freq, cnt] : mp)
        {
            if(cnt == 1) return -1;
            if(cnt%3 == 0) ans += cnt/3;
            else ans += cnt/3 + 1;
        }
        return ans;
    }
};

//Java Code--
class Solution {
    public int minimumRounds(int[] tasks) {
        HashMap<Integer, Integer> mp = new HashMap<>();
        for(int x : tasks) mp.put(x, mp.getOrDefault(x, 0)+1);
        int ans = 0;
        for(int cnt : mp.values())
        {
            if(cnt == 1) return -1;
            if(cnt%3 == 0) ans += cnt/3;
            else ans += cnt/3 + 1;
        }
        return ans;
    }
}
