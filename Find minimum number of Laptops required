//GFG -- Medium
//C++ Code Below
#include <bits/stdc++.h>
using namespace std;
class Solution {
  public:
    int minLaptops(int N, int start[], int end[]) {
        // Code here
        vector<pair<int, int>> p;
        for(int i=0; i<N; i++) p.push_back({start[i], end[i]});
        sort(p.begin(), p.end());
        int ans = 0;
        priority_queue<int> pq;
        for(int i=0; i<N; i++)
        {
            pq.push(-(p[i].second));
            while(!pq.empty() && p[i].first >= abs(pq.top())) pq.pop();
            ans = max(ans, (int)pq.size());
        }
        return ans;
    }
};
int main() {
    int t;
    cin >> t;
    while (t--) {
        int N;
        cin >> N;
        int start[N], end[N];
        for(int i=0; i<N; i++)
            cin>>start[i];
        for(int i=0; i<N; i++)
            cin>>end[i];
            
        Solution ob;
        cout << ob.minLaptops(N, start, end) << endl;
    }
}
