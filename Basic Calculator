// Leetcode --224-- Hard
/* Given a string s representing a valid expression, implement a basic calculator to evaluate it, and return the result of the evaluation.
Note: You are not allowed to use any built-in function which evaluates strings as mathematical expressions, such as eval().
Example 1:
Input: s = "1 + 1"
Output: 2
Example 2:
Input: s = " 2-1 + 2 "
Output: 3
Example 3:
Input: s = "(1+(4+5+2)-3)+(6+8)"
Output: 23   */

// C++ Code Below--
class Solution {
public:
    int calculate(string s) {
        int n = s.size();
        int ans = 0, sum = 0, sign = 1;
        stack<int> st;
        for(int i=0; i<n; i++){
            if(isdigit(s[i])){
                sum = s[i] - '0';
                while(i+1<n && isdigit(s[i+1])){
                    sum = sum*10 + (s[i+1]-'0');
                    i++;
                }
                ans += (sign*sum);
                sum = 0;
                sign = 1;
            }
            else if(s[i] == '+') sign = 1;
            else if(s[i] == '-') sign = -1;
            else if(s[i] == '('){
                st.push(ans);
                st.push(sign);
                ans = 0;
                sign  = 1;
            }
            else if(s[i] == ')'){
                int prevSign = st.top(); st.pop();
                int prevSum = st.top(); st.pop();
                ans = prevSign*ans + prevSum;
            }
        }
        return ans;
    }
};

// Java Code Below--
class Solution {
    public int calculate(String s) {
        int n = s.length();
        int ans = 0, sum = 0, sign = 1;
        Stack<Integer> st = new Stack<Integer>();
        for(int i=0; i<n; i++){
            if(Character.isDigit(s.charAt(i))){
                sum = s.charAt(i) - '0';
                while(i+1<n && Character.isDigit(s.charAt(i+1))){
                    sum = sum*10 + s.charAt(i+1)-'0';
                    i++;
                }
                ans += sum*sign;
                sum = 0;
                sign = 1;
            }
            else if(s.charAt(i) == '+') sign = 1;
            else if(s.charAt(i) == '-') sign = -1;
            else if(s.charAt(i) == '('){
                st.push(ans);
                st.push(sign);
                ans = 0;
                sign = 1;
            }
            else if(s.charAt(i) == ')'){
                int prevSign = st.pop();
                int prevSum = st.pop();
                ans = ans*prevSign + prevSum;
            }
        }
        return ans;
    }
}
